version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: qa-search-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - qa-search-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qa-search-backend
    expose:
      - "5000"
    env_file:
      - .env.production
    volumes:
      - ./data:/app/data:rw
      - ./logs/backend:/app/logs:rw
    restart: unless-stopped
    networks:
      - qa-search-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-/api}
    container_name: qa-search-frontend
    expose:
      - "80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - qa-search-network

  # Telegram Bot
  telegram-bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    container_name: qa-search-telegram-bot
    env_file:
      - .env.production
    volumes:
      - ./data:/app/data:rw
    restart: unless-stopped
    networks:
      - qa-search-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep -q bot.py || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  qa-search-network:
    driver: bridge

volumes:
  data:
  logs:
